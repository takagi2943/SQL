SELECT コード,地域,都道府県名,県庁所在地,面積 FROM 都道府県;
SELECT * FROM 都道府県;
SELECT 地域 AS area, 都道府県名 AS pref FROM 都道府県;

INSERT INTO 都道府県('コード','地域','都道府県名','面積')
    VALUES ('26','近畿','京都',4613);

INSERT INTO 都道府県('コード','地域','都道府県名','県庁所在地','面積')
    VALUES ('37','四国','香川','高松',1876);

INSERT INTO 都道府県('コード','都道府県名','県庁所在地')
    VALUES ('40','福岡','福岡');


UPDATE 都道府県 SET 県庁所在地 = '京都'
    WHERE コード = '26';

UPDATE 都道府県 SET 地域 = '九州', 面積 = 4976
    WHERE コード = '40';

DELETE FROM 都道府県 WHERE コード = '26';

-- 3.6.2
/*3月１日に支払った食費の内容を知りたい*/
SELECT * FROM 家計簿
    WHERE 日付 = '2024-03-01' AND 費目 = '食費'

/*支出に関係のない行を取り出したい*/
SELECT * FROM 家計簿
    WHERE 出金額 IS NULL

/*メモに「購入」を含む支払いを調べたい*/
SELECT * FROM 家計簿
    WHERE メモ LIKE '%購入%' AND 出金額 > 0

/*住居費(家賃、電気代、水道代)の支払いを調べたい*/
SELECT * FROM 家計簿
    WHERE 費目 IN ('家賃','電気代','水道代')

/*3月の行だけを取り出したい*/
SELECT * FROM 家計簿
    WHERE 日付 BETWEEN '2024-03-01' AND '2024-03-31'

-- 3-1
-- 1. 6月のデータ
SELECT * FROM 気象観測
    WHERE 月 = 6;

-- 2. 6月以外のデータ
SELECT * FROM 気象観測
    WHERE 月 <> 6;

-- 3. 降水量が100未満のデータ
SELECT * FROM 気象観測
    WHERE 降水量 < 100;

-- 4. 降水量が200より多いデータ
SELECT * FROM 気象観測
    WHERE 降水量 > 200;

-- 5. 最高気温が30以上のデータ
SELECT * FROM 気象観測
    WHERE 最高気温 >= 30;

-- 6. 最低気温が0以下のデータ
SELECT * FROM 気象観測  
WHERE 最低気温 <= 0;

-- 7. 3月、5月、7月のデータ(INを使う場合)
SELECT * FROM 気象観測
    WHERE 月 IN(3,5,7);

-- 7. 3月、5月、7月のデータ(ORを使う場合)
SELECT * FROM 気象観測
    WHERE 月 = 3 OR 月 = 5 OR 月 = 7;

-- 8. 3月、5月、7月以外のデータ(NOT INを使う場合)
SELECT * FROM 気象観測
    WHERE 月 NOT IN(3,5,7);

-- 8. 3月、5月、7月以外のデータ(ANDを使う場合)
SELECT * FROM 気象観測
    WHERE 月 <> 3 AND 月 <> 5 AND 月 = 7;

-- 9. 降水量が100以下で、湿度が50より低いデータ
SELECT * FROM 気象観測
    WHERE 降水量 <= 100 AND 湿度 < 50;

-- 10. 最低気温が5未満か、最高気温が35より高いデータ
SELECT * FROM 気象観測
    WHERE 最低気温 < 5 OR 最高気温 > 35;

-- 11. 湿度が60～79の範囲にあるデータ(BETWEENを使う場合)
SELECT * FROM 気象観測
    WHERE 湿度 BETWEEN 60 AND 79;

-- 11. 湿度が60～79の範囲にあるデータ(ANDを使う場合)
SELECT * FROM 気象観測
    WHERE 湿度 >= 60 AND 湿度 <= 79;

-- 12. 観測データのない列のある月のデータ
SELECT * FROM 気象観測
    WHERE 月 IS NULL  OR 最高気温 IS NULL
        OR 最低気温 IS NULL OR 湿度 IS NULL;

-- 3-2
-- 1. 都道府県が「川」で終わる都道府県名
SELECT * FROM 都道府県
    WHERE 都道府県 LIKE '%川';

-- 2. 都道府県名に「島」が含まれる都道府県名
SELECT * FROM 都道府県
    WHERE 都道府県名 LIKE '%島%';

-- 3. 都道府県名が「愛」で始まる都道府県名
SELECT * FROM 都道府県
    WHERE 都道府県名 LIKE '愛%';

-- 4. 都道府県名と県庁所在地が一致するデータ
SELECT * FROM 都道府県
    WHERE 都道府県名 = 県庁所在地;

-- 5. 都道府県名と県庁所在地が一致しないデータ
SELECT * FROM 都道府県
    WHERE 都道府県名 <> 県庁所在地

-- 3-3
-- 1. 登録されている全データを取得して、テーブルの内容を確認する
SELECT * FROM 成績表;

-- 2. 次の表にある学生の成績データを追加する
-- 学籍番号S001の学生
INSERT INTO 成績表
    VALUES ('S001','織田　信長','77','55','80','75','93','NULL');
-- 学籍番号A002の学生
INSERT INTO 成績表
    VALUES ('A002','豊臣　秀吉','64','69','70','0','59','NULL');
-- 学籍番号E003の学生
INSERT INTO 成績表
    VALUES ('E003','徳川　家康','80','83','85','90','79','NULL');

-- 3. 学籍番号S001の学生の法学を85、哲学を67に修正する
UPDATE 成績表
    SET 法学 = 85, 哲学 = 67
 WHERE 学籍番号 = 'S001';

-- 4. 学籍番号A002の学生と学籍番号E003の学生の外国語を81に修正する
UPDATE 成績表
    SET 外国語 = 81
  WHERE 学籍番号 IN('A002','E003');

-- 5. 次のルールで総合成績を更新する(4つのルールごとにSQL文を作成する)
-- 5.1 全科目が80以上の学生は「A」とする
UPDATE 成績表
    SET 総合成績 = 'A'
 WHERE 法学 >= 80 AND 経済学 >= 80 AND 哲学 >= 80 AND 情報理論 >= 80 AND 外国語 >= 80;

-- 5.2 法学と外国語のどちらかが80以上、かつ経済学と哲学のどちらかが80以上の学生は「B」とする
UPDATE 成績表
    SET 総合成績 = 'B'
　WHERE (法学 >= 80 OR 外国語 >=80) AND (経済学 >= 80 OR 哲学 >= 80)
    AND 総合成績 IS NULL;

-- 5.3 全科目が50未満の学生は「D」とする
UPDATE 成績表
    SET  総合成績 = 'D'
  WHERE 法学 > 50 AND 経済学 > 50 AND 哲学 > 50 AND 情報理論 > 50 AND 外国語 > 50 
  AND 総合成績 IS NULL

-- 5.4 それ以外の学生を「C」とする
UPDATE 成績表
    SET 総合成績 = 'C'
  WHERE 総合成績 IS NULL;

-- 6. いずれかの科目に0がある学生を、成績表テーブルから削除する
DELETE FROM 成績表
    WHERE 法学 = 0
       OR 経済学 = 0
       OR 哲学 = 0
       OR 情報論理 = 0
       OR 外国語 = 0;

-- 3-4（主キーにふさわしい列名）
-- 1. 気象観測テーブル 月
-- 2. 都道府県テーブル コード
-- 3. 成績表テーブル 学籍番号
